<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lanou.dao.GoodsMapper">

    <resultMap type="Goods" id="goodsResult">
        <id column="gId" property="gId" javaType="int"/>
        <result column="gName" property="gName" jdbcType="VARCHAR"/>
        <result column="gBrand_id" property="brandId" javaType="int"/>
        <result column="gCategory_id" property="categoryId" javaType="int"/>
        <result column="gImg" property="url" jdbcType="VARCHAR"/>
        <result column="gPrice" property="price" javaType="double"/>
        <result column="gMaketPrice" property="gMaketPrice" javaType="double"/>
        <result column="gSale" property="gSale" javaType="int"/>
        <result column="gStock" property="gStock" javaType="int"/>
        <result column="gJiFen" property="gJiFen" javaType="int"/>
        <result column="gDeleteId" property="gDeleteId" javaType="int"/>
        <collection property="detailsList" ofType="com.lanou.entity.Details">
            <id column="detailsId" property="detailsId" javaType="int"/>
            <result column="detailsColor" property="detailsColor" jdbcType="VARCHAR"/>
            <result column="detailsImgUrl" property="detailsImgUrl" jdbcType="VARCHAR"/>
            <result column="detailsGuiGe" property="detailsGuiGe" jdbcType="VARCHAR"/>
            <result column="detailsStock" property="detailsStock" javaType="int"/>
            <result column="detailsPrice" property="detailsPrice" javaType="double"></result>
            <result column="detailsMarketPrice" property="detailsMarketPrice" javaType="double"></result>
            <result column="detailsJiFen" property="detailsJiFen" javaType="int"/>
            <result column="detailsStatus" property="detailsStatus" javaType="int"/>
            <result column="goods_id" property="goods_id" javaType="int"/>
        </collection>
    </resultMap>

    <select id="findGoodsByCategoryId" resultMap="goodsResult">
        select * from 7jia2_goods where gCategory_id = #{gCategory_id} and gDeleteId = 0
    </select>

    

    <select id="findGoodsByCategoryIdFenYe" resultMap="goodsResult">
        select * from 7jia2_goods where gCategory_id in
         <foreach collection="list" item="item" index="index" open="(" separator="," close=")">
            #{item}
         </foreach>
         and gDeleteId = 0
    </select>

    <select id="findGoodsIdByCategory1" resultType="int">
        select categoryId from 7jia2_category where parentId in (select categoryId from 7jia2_category where parentId = #{parentId})
    </select>



    <select id="findGoodsIdByCategory2" resultType="int">
        select categoryId from 7jia2_category where categoryId in (select categoryId from 7jia2_category where parentId = #{parentId})
    </select>

    <select id="findGoodsInCategoryIdRandom" resultMap="goodsResult">
        select * from 7jia2_goods where gDeleteId = 0 and gCategory_id in
        <foreach collection="list" item="item" index="index" open="(" separator="," close=")">
            #{item}
        </foreach>
        order by rand() limit 8
    </select>


    <!--//根据价格排序（升序）-->
    <select id="findGoodsByCategoryIdOderByPrice" resultMap="goodsResult">
        select * from 7jia2_goods as g where gDeleteId = 0 and gCategory_id in
        <foreach collection="list" item="item" index="index" open="(" separator="," close=")">
            #{item}
        </foreach>
         order by g.gPrice asc

    </select>

    <!--//根据价格排序（降序）-->
    <select id="findGoodsByCategoryIdOderByPriceDesc" resultMap="goodsResult">
        select * from 7jia2_goods as g where gDeleteId = 0 and gCategory_id in
        <foreach collection="list" item="item" index="index" open="(" separator="," close=")">
            #{item}
        </foreach>
        order by g.gPrice desc
    </select>

    <!--//商品列表页根据销量Sale排序（降序）-->
    <select id="findGoodsByCategoryIdOrderBySale" resultMap="goodsResult">
        select * from 7jia2_goods as g where gDeleteId = 0 and gCategory_id in
        <foreach collection="list" item="item" index="index" open="(" separator="," close=")">
            #{item}
        </foreach>
        order by g.gSale desc
    </select>


    <!--模糊查询-->
    <select id="findByLikeName" parameterType="String" resultMap="goodsResult">
        select * from 7jia2_goods where gDeleteId = 0 and gName like #{likeName}
    </select>


    <!--根据商品Id来找商品-->
    <select id="findByGid" resultMap="goodsResult" parameterType="int">
        select * from 7jia2_goods where gDeleteId = 0 and gId = #{gId}
    </select>

    <!--查找一批团购商品-->
    <select id="findTuangou" parameterType="int" resultMap="goodsResult">
        select * from 7jia2_goods where gDeleteId = 0 and gTuangou = 1 limit #{page},6;
    </select>

    <!--查找所有团购商品-->
    <select id="findAllTuangou" resultMap="goodsResult">
        select * from 7jia2_goods where gDeleteId = 0 and gTuangou = 1
    </select>

    <!--查找特卖商品-->
    <select id="findTemai"  parameterType="int" resultMap="goodsResult">
        select * from 7jia2_goods where gDeleteId = 0 and gTemai = 1 limit #{page},6;
    </select>

    <!--查找所有特卖商品-->
    <select id="findAllTemai" resultMap="goodsResult">
        select * from 7jia2_goods where gDeleteId = 0 and gTemai = 1
    </select>



    <!--//商品列表页根据价格区间-->
    <select id="findGoodsByCategoryAndPriceQuJian" resultMap="goodsResult">
        select * from 7jia2_goods as g where gDeleteId = 0 and gCategory_id in
        <foreach collection="list" item="item" index="index" open="(" separator="," close=")">
            #{item}
        </foreach>
        and g.gPrice between #{price1} and #{price2}
    </select>

    <!--根据商品id集合查找商品-->
    <select id="findGoodsById" resultMap="goodsResult">
        select * from 7jia2_goods where gDeleteId = 0 and gCategory_id in
        <foreach collection="list1" item="item1" index="index" open="(" separator="," close=")">
            #{item1}
        </foreach>
        and
        gId in
        <foreach collection="list" item="item" index="index" open="(" separator="," close=")">
            #{item}
        </foreach>
    </select>

    <!--//根据品牌id和第三层级的id集合查找商品-->
    <select id="findGoodsByBrandId" resultMap="goodsResult">
        select * from 7jia2_goods as g where gDeleteId = 0 and gCategory_id in
        <foreach collection="list" item="item" index="index" open="(" separator="," close=")">
            #{item}
        </foreach>
        and g.gBrand_id = #{brandId}
    </select>






    <!--*****************************************************************************************-->
    <!--*********后台管理系统*********-->

    <!--//根据条件分页展示商品-->
    <select id="selectAllGoods" resultMap="goodsResult">
        SELECT * from 7jia2_goods as g where gDeleteId = 0
        <if test="brandId != 0">
            and gBrand_id = #{brandId}
        </if>
        <if test="likeName != null">
            and gName like concat(concat('%',#{likeName}),'%')
        </if>
        <if test="list.size!=0">
            and gCategory_id in
            <foreach collection="list" item="item" index="index" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        limit #{page},#{count}
    </select>

    <!--//得到获得的商品的ID的集合，得到总个数size-->
    <select id="selectAllGoodsId" resultMap="goodsResult">
        SELECT gId from 7jia2_goods as g where gDeleteId = 0
        <if test="brandId != 0">
            and gBrand_id = #{brandId}
        </if>
        <if test="likeName != null">
            and gName like concat(concat('%',#{likeName}),'%')
        </if>
        <if test="list.size!=0">
            and gCategory_id in
            <foreach collection="list" item="item" index="index" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
    </select>

    <!--//根据商品的具体id查找商品-->
    <select id="selectGoodsById" resultMap="goodsResult">
        SELECT * FROM 7jia2_goods where gDeleteId = 0 and gId = #{goodsId}
    </select>

    <!--//修改商品-->
    <update id="updateGoodsById">
        update 7jia2_goods set gName=#{gName},gPrice=#{gPrice},gMaketPrice=#{gMaketPrice},gStock=#{gStock},gJiFen=#{gJiFen}
         where gId = #{gId}
    </update>

    <!--//删除商品（逻辑删除）-->
    <update id="luojiDelete" parameterType="int">
        update 7jia2_goods set gDeleteId = 1 where gId= #{goodsId}
    </update>


    <!--********  添加新的商品  ********-->

    <insert id="addNewGoods">
        insert into 7jia2_goods (gName,gBrand_id,gCategory_id,gImg,gPrice,gMaketPrice,gStock,gJiFen)
         values(#{gName},#{gBrand_id},#{gCategory_id},#{gImg},#{gPrice},#{gMaketPrice},#{gStock},#{gJiFen})
    </insert>


    <!--********  商品回收站  ********-->

    <!--//根据条件分页展示商品-->
    <select id="selectRecycleGoods" resultMap="goodsResult">
        SELECT * from 7jia2_goods as g where gDeleteId = 1
         limit #{0},#{1}
    </select>
    <!--//根据条件分页展示商品-->
    <select id="selectRecycleGoodsId" resultMap="goodsResult">
        SELECT * from 7jia2_goods as g where gDeleteId = 1
    </select>

    <update id="huiFuGoods" parameterType="int">
        update 7jia2_goods set gDeleteId = 0 where gId= #{0}
    </update>
</mapper>
